@model GridLogikViewer.Areas.ABTScreen.Models.FuelRate
@using GridLogikViewer.Extensions
@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="col-lg-10">
        <h2>Fuel Rate</h2>
    </div>
    <div class="col-lg-2" style="border:0px solid #f00; text-align:right; margin:10px 0px; padding:0px 20px 0px 0px;">
        <a href='@Url.Action("Index")' class="btn btn-flatorange"><i class="fa fa-arrow-left"></i>&nbsp;&nbsp;Back to List</a>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        <div class="panel-heading">

            <div class=" dashboard-panel-body-box"><h3>Add</h3></div>
            <div class="panel-actions  dashboard-panel-body-boxcontrols">

            </div>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true)
            <input id="Dateformat" type="hidden" />
            <input id="ServerDateformat" type="hidden" />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelForRequired(model => model.app_from, null, "col-md-2 control-label")
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.app_from, new { @id = "FromDate", @class = "form-control", @readonly = true, @name = "txtFrmDate" })
                        </div>
                        <div class="col-md-3">
                            @Html.ValidationMessageFor(model => model.app_from)
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelForRequired(model => model.Rate, null, "col-md-2 control-label")
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.Rate, new { @class = "form-control decimal", @maxlength = "8" })
                        </div>
                        <div class="col-md-3">
                            @Html.ValidationMessageFor(model => model.Rate)
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<input type="submit" value="Save" class="btn btn-default"  />*@

                            <button type="button" class="btn btn-success" id="btnCreate"><i class="fa fa-floppy-o"></i>&nbsp;&nbsp;Save</button>

                            @*<input type="reset" value="Reset" class="btn btn-default"  />*@
                            <button type="reset" class="btn btn-danger" id="btnReset"><i class="fa fa-trash-o"></i>&nbsp;&nbsp;Reset</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            contentType: "application/json;charset=utf-8",
            url: BaseAddress + "prmglobal",
            dataType: "json",
            async: false,
            success: function (dateformat, status, jqXHR) {
                var str = "";
                if (dateformat.Data.result != undefined) {
                    var data = dateformat.Data.result;
                    for (var i in data) {
                        if (data[i].prmunit == "DateField") {
                            $("#Dateformat").val(data[i].prmvalue);
                        }
                        else if (data[i].prmunit == "ServerDate") {
                            $("#ServerDateformat").val(data[i].prmvalue);
                        }
                    }

                }
                else if (dateformat.Data.e == "E") {
                    if (dateformat.Data.d.length > 0)
                        //  alert(dateformat.Data.d);
                        alert(dateformat.Data.d, '', false, "E");
                }
            }
        });

        $("#FromDate").datepicker({
            dateFormat: $("#Dateformat").val(),
            changeMonth: true,
            changeYear: true,
            maxDate: '0'
        });

        $("#btnCreate").click(function (e) {
            if ($('form').valid()) {
                var fuelRateModel = {
                    "app_from": $("#FromDate").val(),
                    "Rate": $("#Rate").val(),
                    "isdeleted": 0
                };
                var id =@this.ViewContext.RouteData.Values["id"]
                $.ajax({
                    type: "POST",
                    contentType: "application/json;charset=utf-8",//type of data to be send
                    url: '@Url.Action("Create", "FuelRate")', //"/FuelRate/Create",
                    dataType: "json",//type of data to be received
                    data: JSON.stringify(fuelRateModel),//data to be send
                    success: function (response) {

                        if (response.e == "S") {
                            if (response.d.length > 0)
                                alert(response.d, '@Url.Action("create", "FuelRate")', true, response.e);
                            @*$('#btnReset').click();
                            window.location.href = '@Url.Action("Index", "MeterModel")';*@
                            @*window.location.href = '@Url.Action("Index", "MeterType")';*@
                        }
                        else if (response.e == "M") {
                            if (response.d.length > 0)
                                alert(response.d, '', false, response.e);
                        }
                        else if (response.e == "E") {
                            if (response.d.length > 0)
                                alert(response.d, '', false, response.e);
                        }

                    },
                    error: function (xhr, status, error) {

                        alert(xhr.responseText);
                    }
                });

            }
            e.preventDefault();
        });
    });
</script>