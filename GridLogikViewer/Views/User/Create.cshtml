@model  GridLogik.ViewModels.MstUser

@{
    ViewBag.Title = "Welcome to GridLogikViewer";

}
@section scripts
{

    <script>
        $(document).ready(function () {
            //new confirmexitmsg('form');
            $('.select2').select2({ closeOnSelect: false });
            $("#usremployeeid").change(function () {
                FillEmployeeBasedData();
            });





            //Fill drop down for role
            //$.ajax({
            //    type: "GET",
            //    contentType: "application/json;charset=utf-8",
            //    url: BaseAddress + "role",
            //    dataType: "json",
            //    success: function (roles, status, jqXHR) {
            //        var str = "";
            //        //str += "<option value=''>Select</option>";
            //        str = "<option value=''>Select</option>";

            //        if (roles.length > 0) {
            //            $.each(roles, function (key, value) {
            //                str += "<option value=" + value.rolrecid + ">" + value.rolname + "</option>";
            //            });
            //        }

            //        //if (roles.Data.result != undefined) {
            //        //    var data = roles.Data.result;
            //        //    for (var i in data) {

            //        //    }
            //        //}
            //        //else if (roles.Data.e == "E") {
            //        //    if (roles.Data.d.length > 0)
            //        //        alert(roles.Data.d);
            //        //}
            //        $("#usrroleid").html(str);
            //        $(".usrroleidclass").selectpicker();

            //    }
            //});

            //Fill drop down for employeeid
            //$.ajax({
            //    type: "GET",
            //    contentType: "application/json;charset=utf-8",
            //    url: BaseAddress + "employee/getunusedemployee",
            //    dataType: "json",
            //    success: function (employees, status, jqXHR) {
            //        var str = "";
            //        str = "<option value='0'>Select</option>";
            //        if (employees.length > 0) {
            //            $.each(employees, function (key, value) {
            //                str += "<option value=" + value.emprecid + ">" + (value.empfirstname + " " + value.emplastname) + "</option>";
            //            })
            //        }
            //        //if (employees.Data.result != undefined) {
            //        //    var data = employees.Data.result;
            //        //    for (var i in data) {
            //        //        str += "<option value=" + data[i].empid + ">" + (data[i].empfirstname + " " + data[i].emplastname) + "</option>";
            //        //    }
            //        //}
            //        //else if (employees.Data.e == "E") {
            //        //    if (employees.Data.d.length > 0)
            //        //        alert(employees.Data.d);
            //        //}
            //        $("#usremployeeid").html(str);
            //        $(".usremployeeidclass").selectpicker();
            //    }
            //});

            $("#btnReset").click(function (e) {

                $("#usrroleid").selectpicker("refresh");
                $("#usremployeeid").selectpicker("refresh");
                $(".select2").val(null).trigger('change');
            });



            @*$("#btnCreate").click(function (e) {
                var box = new ajaxLoader(this, { classOveride: 'blue-loader', bgColor: '#000' });

                if ($('form').valid()) {
                    formmodified = 0;
                    var mstUser = {
                        "usrid": $("#usrid").val(),
                        "usrpassword": $("#usrpassword").val(),
                        "usrroleid": $("#usrroleid").val(),
                        "usremployeeid": $("#usremployeeid").val(),
                        "usrisactive": 1,
                        "usrfirstname": $("#usrfirstname").val(),
                        "usrmiddlename": $('#usrmiddlename').val(),
                        "usrlastname": $("#usrlastname").val(),
                        "usremailid": $("#usremailid").val(),
                        "usrphoneno1": $("#usrphoneno1").val(),
                        "usrphoneno2": $("#usrphoneno2").val(),
                        "usrcreatedbyuserid": '@HttpContext.Current.Session["userid"]',
                        "usrtype": "E",
                        "usrisdeleted": 0
                    };


                    var userwithlocation = {
                        mstuser: mstUser,
                        location: $("#ddlLocation").val(),
                        group: $("#ddlGroup").val()
                    }

                    $.ajax({
                        type: "POST",
                        contentType: "application/json;charset=utf-8",//type of data to be send
                        url: BaseAddress + "user",
                        //crossDomain: true,
                        dataType: "json",//type of data to be received
                        data: JSON.stringify(userwithlocation),//data to be send
                        success: function (response) {

                            if (response.Data.e == "S") {
                                // if (box) box.remove();
                                alert(response.Data.d, '', true, response.Data.e);

                                $('#btnReset').click();
                                $("#usrroleid").selectpicker("refresh");
                                $("#usremployeeid").selectpicker("refresh");
                                //$(".usrroleidclass").selectpicker('refresh');
                                //$(".usremployeeidclass").selectpicker('refresh');
                            }
                            else if (response.Data.e == "M") {
                                //  if (box) box.remove();
                                alert(response.Data.d, '', false, response.Data.e);
                            }
                            else if (response.Data.e == "E") {
                                //  if (box) box.remove();
                                alert(response.Data.d, '', false, response.Data.e);
                            }
                            if (box) box.remove();
                        },
                        error: function (xhr, status, error) {
                            if (box) box.remove();
                            // alert(xhr.responseText);

                        }
                    });
                }
                else { if (box) box.remove(); }
                e.preventDefault();
            });*@
        });


        function FillEmployeeBasedData() {
            //Get Data for id and assign it to controls
            var id = $("#usremployeeid").val();
            $.ajax({
                url: BaseAddress + "employee/" + id,
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                async: false,
                success: function (response) {

                    $("#usrfirstname").val(response.empfirstname);
                    $("#usrmiddlename").val(response.empmiddlename);
                    $("#usrlastname").val(response.emplastname);
                    $("#usremailid").val(response.empemailid);
                    $("#usrphoneno1").val(response.empphoneno1);
                    $("#usrphoneno2").val(response.empphoneno2);

                },
                error: function (xhr) {
                    // alert(xhr.responseText);
                }
            });

        }
    </script>

}

<section>
    <div id="main-content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <!--Top breadcrumb start -->
                    <ol class="breadcrumb">
                        <li><a href="#"><i class="fa fa-home"></i></a></li>
                        <li><a href="#">Masters</a></li>
                        <li class="active">User Master</li>
                    </ol>
                    <!--Top breadcrumb start -->
                    <div class="row">
                        <div class="col-md-12">
                            <!--Table Wrapper Start-->
                            <a class="btn btn-warning pull-right btn-sm" href='@Url.Action("Index")'><i class="fa fa-arrow-left"></i> Back To List</a>
                            <div class="clearfix"></div>
                            <hr />
                            <div class="panel panel-light-blue">
                                <div class="panel-heading">
                                    <i class="fa fa-plus-circle"></i>  <strong>ADD</strong>
                                </div>

                                <div class="panel-body">
                                    @using (Html.BeginForm())
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true)

                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usrid, null, "")
                                            @Html.TextBoxFor(model => model.usrid, new { @class = "form-control alpha", @maxlength = "10" })
                                            @Html.ValidationMessageFor(model => model.usrid, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usrroleid, null, "")
                                            @Html.DropDownListFor(model => model.usrroleid, (IEnumerable<SelectListItem>)ViewBag.Roles, "Select", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.usrroleid, null, new { @class = "validation-redcolor" })
                                        </div>

                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usrpassword, null, "")
                                            @Html.PasswordFor(model => model.usrpassword, new { @class = "form-control", @maxlength = "15" })
                                            @Html.ValidationMessageFor(model => model.usrpassword, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usrRepassword, null, "")
                                            @Html.PasswordFor(model => model.usrRepassword, new { @class = "form-control", @maxlength = "15" })
                                            @Html.ValidationMessageFor(model => model.usrRepassword, null, new { @class = "validation-redcolor", @style = "white-space:nowrap;" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usremployeeid, null, "")
                                            @Html.DropDownListFor(model => model.usremployeeid, (IEnumerable<SelectListItem>)ViewBag.Employees, "Select", new { @class = "usremployeeidclass form-control", @data_live_search = "true", @data_live_search_style = "contains" })
                                            @Html.ValidationMessageFor(model => model.usremployeeid, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="clearfix"></div>
                                        <hr class="hr_solid" />
                                        <div class="form-group col-md-4">
                                            @Html.Label(" ", new { @class = "" })
                                            @Html.TextBoxFor(model => model.usrfirstname, new { @readonly = true, @class = "form-control", placeholder = "First Name" })
                                            @Html.ValidationMessageFor(model => model.usrfirstname, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.Label(" ", new { @class = "" })
                                            @Html.TextBoxFor(model => model.usrmiddlename, new { @readonly = true, @class = "form-control", placeholder = "Middle Name" })
                                            @Html.ValidationMessageFor(model => model.usrmiddlename, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.Label(" ", new { @class = "" })
                                            @Html.TextBoxFor(model => model.usrlastname, new { @readonly = true, @class = "form-control", placeholder = "Last Name" })
                                            @Html.ValidationMessageFor(model => model.usrlastname, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usrphoneno1, new { @class = "" })
                                            @Html.TextBoxFor(model => model.usrphoneno1, new { @readonly = true, @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.usrphoneno1, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usrphoneno2, new { @class = "" })
                                            @Html.TextBoxFor(model => model.usrphoneno2, new { @readonly = true, @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.usrphoneno2, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            @Html.LabelFor(model => model.usremailid, new { @class = "" })
                                            @Html.TextBoxFor(model => model.usremailid, new { @readonly = true, @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.usremailid, null, new { @class = "validation-redcolor" })
                                        </div>
                                        <div class="clearfix"></div>
                                        <div class="panel-footer col-md-12 text-center">
                                            <button type="submit" class="btn btn-sm btn-success" id="btnCreate"><i class="fa fa-save"></i>&nbsp;&nbsp;Save</button>
                                            <button type="reset" class="btn btn-sm btn-danger" id="btnReset"><i class="fa fa-undo"></i>&nbsp;&nbsp;Reset</button>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@Scripts.Render("~/bundles/jqueryval")
